name: NeonQuiz CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - name: Check code style
        run: npx eslint . --ext .js
        # Nous avons retiré le "|| true" pour que le CI échoue si le linting échoue

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: lint

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: neonquiz
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - name: Run unit tests
        run: npm run test:unit
      - name: Run API tests
        run: npm run test:api
      - name: Generate coverage report
        run: npm test
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
      # Ajout d'une étape pour publier le rapport de couverture
      - name: Publish coverage report
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov.info

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - name: Check build
        run: npm run build --if-present
      - name: Create sample config.env
        run: |
          echo "PORT=3000" > config.env
          echo "DB_HOST=localhost" >> config.env
          echo "DB_USER=root" >> config.env
          echo "DB_PASSWORD=" >> config.env
          echo "DB_NAME=neonquiz" >> config.env
      - name: Create build artifact
        run: |
          mkdir -p build
          cp -r public server.js package.json package-lock.json config.env build/
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/
      # Ajout d'une étape pour créer une release GitHub avec l'artefact
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: build/*
          name: Release ${{ github.run_number }}
          tag_name: v0.1.${{ github.run_number }}
          body: |
            ## Nouvelle version de NeonQuiz
            
            Build automatique généré par GitHub Actions.
            
            ### Commit
            ${{ github.event.head_commit.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 